{"componentChunkName":"component---src-templates-docs-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Azure Key Vault to Kubernetes","docsLocation":"https://github.com/SparebankenVest/akv4k8s-docs/tree/master/content/docs"}},"mdx":{"fields":{"id":"01095f6c-f415-5969-9d7f-527db23e8732","title":"Introduction","slug":"/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Introduction\",\n  \"metaTitle\": \"Introduction\",\n  \"metaDescription\": \"Azure Key Vault to Kubernetes\",\n  \"index\": 1\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Azure Key Vault to Kubernetes (akv2k8s) project makes\\nAzure Key Vault objects available to Kubernetes in a simple and\\nsecure way.\"), mdx(\"p\", null, \"The goals for this project was:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Avoid a direct program dependency on Azure Key Vault for getting secrets, and adhere to the 12 Factor App principle for configuration (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://12factor.net/config\"\n  }), \"https://12factor.net/config\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Make it simple, secure and low risk to transfer Azure Key Vault secrets into Kubernetes as native Kubernetes secrets\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Securely and transparently be able to inject Azure Key Vault secrets as environment variables to applications, without having to use native Kubernetes secrets\")), mdx(\"p\", null, \"All of these goals are met.\"), mdx(\"p\", null, \"Follow the links below to learn more about how to use the akv2k8s project:\"), mdx(GraphicToc, {\n    mdxType: \"GraphicToc\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"parent":{"relativePath":"index.mdx"},"frontmatter":{"metaTitle":"Introduction","metaDescription":"Azure Key Vault to Kubernetes"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/authentication","title":"Authentication"}}},{"node":{"fields":{"slug":"/authorization","title":"Authorization"}}},{"node":{"fields":{"slug":"/components","title":"Components"}}},{"node":{"fields":{"slug":"/examples","title":"Examples"}}},{"node":{"fields":{"slug":"/how-it-works","title":"How it Works"}}},{"node":{"fields":{"slug":"/","title":"Introduction"}}},{"node":{"fields":{"slug":"/reference","title":"Reference"}}},{"node":{"fields":{"slug":"/setup","title":"Setup"}}},{"node":{"fields":{"slug":"/tasks","title":"Tasks"}}},{"node":{"fields":{"slug":"/components/1-controller","title":"Controller"}}},{"node":{"fields":{"slug":"/components/2-env-injector","title":"Env Injector"}}},{"node":{"fields":{"slug":"/components/3-when-to-use-which","title":"When to use which?"}}},{"node":{"fields":{"slug":"/tasks/0-prerequisites","title":"Prerequisites"}}},{"node":{"fields":{"slug":"/tasks/1-secret","title":"Get Secret"}}},{"node":{"fields":{"slug":"/tasks/2-certificate","title":"Get Certificate"}}},{"node":{"fields":{"slug":"/tasks/3-multi-value-secret","title":"Get Multi Value Secret"}}},{"node":{"fields":{"slug":"/tasks/4-signing-key","title":"Get Signing Key"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"01095f6c-f415-5969-9d7f-527db23e8732"}}}